name: Build, Test and Release

on:
  push:
    branches:
      - main
      - development
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Create local.properties
        run: |
          echo "DEFAULT_WEB_CLIENT_ID=${{ secrets.DEFAULT_WEB_CLIENT_ID }}" >> local.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> local.properties
          echo "BASE_URL_ML=${{ secrets.BASE_URL_ML }}" >> local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          echo "APP_CENTER_SECRET=${{ secrets.APP_CENTER_SECRET }}" >> local.properties

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > ./app/google-services.json

      - name: Run Lint
        run: ./gradlew lintDebug
        continue-on-error: true

      - name: Archive Lint Reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: lint-reports
          path: app/build/reports/lint-results.html

      - name: Build with Gradle
        run: ./gradlew build

      - name: List build outputs
        run: ls -R app/build/outputs/

  release:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Create local.properties
        run: |
          echo "DEFAULT_WEB_CLIENT_ID=${{ secrets.DEFAULT_WEB_CLIENT_ID }}" >> local.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> local.properties
          echo "BASE_URL_ML=${{ secrets.BASE_URL_ML }}" >> local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          echo "APP_CENTER_SECRET=${{ secrets.APP_CENTER_SECRET }}" >> local.properties

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > ./app/google-services.json

      - name: Build with Gradle
        run: ./gradlew build

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: List build outputs and tools
        run: |
          ls -R app/build/outputs/
          ls -R /usr/local/lib/android/sdk/build-tools/

      - name: Generate version
        id: generate_version
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            VERSION="v$(date +'%Y%m%d%H%M%S')"
            echo "Generated version: $VERSION"
            echo "::set-output name=version::$VERSION"
          else
            VERSION="${{ github.ref }}"  # Use the tag name
            echo "Using tag version: $VERSION"
            echo "::set-output name=version::$VERSION"
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_version.outputs.version }}
          release_name: Release ${{ steps.generate_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact ${{ steps.generate_version.outputs.version }}
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
