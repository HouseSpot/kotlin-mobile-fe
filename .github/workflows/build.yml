name: Build, Test and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Create local.properties
        run: |
          echo "DEFAULT_WEB_CLIENT_ID=${{ secrets.DEFAULT_WEB_CLIENT_ID }}" >> local.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> local.properties
          echo "BASE_URL_ML=${{ secrets.BASE_URL_ML }}" >> local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          echo "APP_CENTER_SECRET=${{ secrets.APP_CENTER_SECRET }}" >> local.properties

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > ./app/google-services.json

      - name: Build with Gradle
        run: ./gradlew build

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Create local.properties
        run: |
          echo "DEFAULT_WEB_CLIENT_ID=${{ secrets.DEFAULT_WEB_CLIENT_ID }}" >> local.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> local.properties
          echo "BASE_URL_ML=${{ secrets.BASE_URL_ML }}" >> local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          echo "APP_CENTER_SECRET=${{ secrets.APP_CENTER_SECRET }}" >> local.properties

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > ./app/google-services.json

      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate version
        id: generate_version
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            VERSION="v$(date +'%Y%m%d%H%M%S')"
            echo "Generated version: $VERSION"
            echo "::set-output name=version::$VERSION"
          else
            VERSION="${{ github.ref }}"  # Use the tag name
            echo "Using tag version: $VERSION"
            echo "::set-output name=version::$VERSION"
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_version.outputs.version }}
          release_name: Release ${{ steps.generate_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
